- name: anaconda
  become: no

  # see also: https://github.com/shiraco/ansible_ipython_machineleaning_bootstrap_conda
  block:
    - name: install packages for pyenv
      become: yes
      apt: name={{ item }}
      with_items:
        - git
        - gcc
        - make
        - openssl
        - build-essential
        - zlib1g-dev
        - libbz2-dev
        - libssl-dev
        - libreadline-dev
        - libsqlite3-dev
        - pkg-config
        - gfortran
        - libopenblas-dev
        - libblas-dev
        - liblapack-dev
        - libpng-dev
        - libjpeg8-dev
        - libfreetype6
        - libfreetype6-dev
        - libsm6
        - libxrender-dev
      tags: pyenv

    - name: check pyenv is installed
      command: test -x {{ home }}/.pyenv/bin/pyenv
      register: pyenv_existence
      ignore_errors: yes
      tags: pyenv

    - name: git clone pyenv , pyenv-virtualenv
      git:
        repo: '{{ item.repo }}'
        dest: '{{ item.dest }}'
      with_items:
        - repo: https://github.com/pyenv/pyenv.git
          dest: ~/.pyenv
        - repo: https://github.com/pyenv/pyenv-virtualenv.git
          dest: ~/.pyenv/plugins/pyenv-virtualenv
      when: pyenv_existence|failed
      ignore_errors: yes
      tags: pyenv

    - name: add pyenv config to .bash_profile and .bashrc
      blockinfile:
        path: '{{ item }}'
        block: |
          export PYENV_ROOT="$HOME/.pyenv"
          export PATH="$PYENV_ROOT/bin:$PATH"
          if command -v pyenv 1>/dev/null 2>&1; then
            eval "$(pyenv init -)"
          fi
        state: present
        create: yes
      with_items:
        - '{{ home }}/.bash_profile'
        - '{{ home }}/.bashrc'

    - name: install pyenv's python and rehash
      shell: . {{ home }}/.bash_profile && pyenv install -s {{ python_version }} && pyenv rehash && pyenv global {{ python_version }}
      tags: pyenv

    - name: pip install global python pkgs
      pip: name={{ item }} state=latest executable={{ home }}/.pyenv/shims/pip
      with_items:
        - pip
      tags: global_python

    - name: pip install packages
      pip: name={{ item }} state=latest executable={{ home }}/.pyenv/shims/pip
      with_items:
        - numpy
        - scipy
        - pandas
        - scikit-learn
        - matplotlib
        - cython
        - ipython
        - jupyter
        - tensorflow
        - keras
        - chainer
        - tqdm

    - name: check pyenv versions
      shell: . {{ home }}/.bash_profile && pyenv versions
      register: pyenv_versions
    - debug: var=pyenv_versions.stdout_lines

    - name: check pip packages
      shell: . {{ home }}/.bash_profile && pip list
      register: pip_list
    - debug: var=pip_list.stdout_lines
